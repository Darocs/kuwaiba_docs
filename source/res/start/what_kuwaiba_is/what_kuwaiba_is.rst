1.Administration
+++++++++++++++++

.. image:: /res/start/what_kuwaiba_is/administration.PNG


Session Manager
~~~~~~~~~~~~~~~~

Команда вызывает страницу менеджера сессий, где отображены все доступные
пользователи программы.

.. image:: /res/start/what_kuwaiba_is/administration_session_manager.PNG


List Type Manager
~~~~~~~~~~~~~~~~~~

Здесь будет отображен список всех сервисов (слева). Кнопка 
``+ New List Type Item`` позволяет пользователю создавать новый сервис.
Кнопки **property sheet** и **manage attachment** позволяют раскрыть свойства и 
управлять вложениями соответственно.

.. image:: /res/start/what_kuwaiba_is/list_type_manager.PNG

На картинке изображен пример просмотра свойств сервиса **EquipmentModel**.
Клик на него в столбце слева вызывает список моделей оборудования.
Клик на модели вызывает ее свойства.
Панель ``search`` (значок лупы) позволяет вручную найти необходимый сервис.


Task Manager
~~~~~~~~~~~~

.. image:: /res/start/what_kuwaiba_is/task_manager.PNG

В разделе находится открытый исходный код, в котором можно проработать
необходимые задачи kuwaiba самостоятельно и настроить функции под нужный кейс.


Audit Trail
~~~~~~~~~~~~

.. image:: /res/start/what_kuwaiba_is/audit_trail.PNG

Kuwaiba способна отслеживать изменения, вносимые пользователями в базу данных,
в целях аудита. Эти изменения могут быть внесены в объекты инвентаризации 
(``оборудование``, ``местоположения`` и т. д.) или в объекты приложений 
(``пулы``, ``задачи``, ``свойства пользователя``). Регистрируются два типа 
событий: **Общие** - события, которые не связаны с каким-либо конкретным 
объектом, например, новые входы в систему или создание
объектов приложения; и события, связанные с **объектами**, такие как изменение
свойств или операции перемещения.


Template Manager
~~~~~~~~~~~~~~~~~~

Для упрощения процесса создания шаблонов все элементы разделяются на условные
классы. В данном разделе можно распределить все необходимые для работы элементы 
на классы, после чего добавлять в них шаблоны для упрощения дальнейшей работы. 
Шаблоны ``(Templates)`` создаются нажанием на ``+``. 

.. image:: /res/start/what_kuwaiba_is/template_manager.PNG

.. tip:: **Рекомендация**

    Желательно максимально заполнить поля свойств, которые являются одинковыми
    для данного шаблона. В этом случае не придется заполнять данные вручную 
    каждый раз при создании одного и того же шаблона.

.. hint:: **Где может пригодиться template**

    Пример: необходимо поместить в шкаф (rack) 4 батареи (battery). Чтобы не
    создавать **New object** внутри **rack** и не заполнять поля вручную,
    можно создать **New object from Template** и выбрать готовый шаблон батареи
    нужной модели.


Data Model Manager
~~~~~~~~~~~~~~~~~~~~

Одной из ключевых особенностей Kuwaiba является то, что он полностью объектно-
ориентирован.Это означает, что каждый элемент бизнеса (маршрутизатор, город, 
порт) и приложения (пользователи, типы) представлен объектом в приложении, и эти
объекты в свою очередь являются продуктом абстракции реальности, называемой 
классом. Аналогично, каждый атрибут является полем в классе. Набор классов, 
атрибутов и отношений между ними называется моделью данных. Существует модель 
данных по умолчанию, однако можно ее настроить в зависимости от 
потребностей, добавляя, удаляя и изменяя классы. Для этого используется 
**Модуль Data Model Manager**.

.. image:: /res/start/what_kuwaiba_is/data_model_manager.PNG

Классы в Data Model Manager представляют собой *структуру дерева* или 
*иерархическую структуру*. Вершина иерархии ``InventoryObject`` — это наиболее 
общий тип элемента вмодель данных и ее подклассы представляют все возможные 
элементы. При раскрытии дерева классы становятся все более специализированными,
и каждый уровень наследует атрибуты родительских классов.  

.. note:: Как правило все абстрактные классы имеют приставку *Generic*. Важно: несколько
    основных классов (например, InventoryObject или AdministrationItem) - абстрактные
    и являются исключением. 


AdministrativeItem
-------------------

Содержит в себе все вспомогательные элементы, относящиеся к структуре kuwaiba и
и настройке работы с ней.
Пример:
- GenericActivity
  
- GenericContact
  
- GenericContract
  
- GenericCustomer
  
- GenericOrder
  
- GenericProject
  
- GenericProxy
  
- GenericService
  

GenericConnection
-------------------

Содержит в себе 2 класса: ``GenericLogicalConnection`` - каналы и 
``GenericPhysicalConnection`` - оптоволокно.


GenericLogicalElement
----------------------

...???


GenericPort
-----------

Содержит виртуальные и физические порты.


GenericPowerPart
-----------------

Включают в себя предохранители, выключатели, выпрямители и прочее.


GenericSoftwareAsset
---------------------

Содержит лицензии.

ViewableObject
---------------

Содержит объекты, которые можно нанести на карту и физически увидеть в разделе
``Navigation Tree``.


User Manager
~~~~~~~~~~~~~

Открывает настройку ролей пользователей с установкой прав. 
Пользователей можно создавать как по одному, так и группой.

.. image:: /res/start/what_kuwaiba_is/user_manager.PNG



Containment Manager
~~~~~~~~~~~~~~~~~~~~

Данный раздел является настройкой иерархии отдельных элементов, т.е. позволяет
создавать одни элементы внутри других (``children`` внутри ``parents``)

.. image:: /res/start/what_kuwaiba_is/containment_manager.PNG

Выбранные элементы появятся в поле **Current Possible Children** в виде тегов.


2.Navigation
+++++++++++++

Navigation
~~~~~~~~~~~~

Самый главный раздел kuwaiba, который составляет 90% всего рабочего пространства.
Кнопка ``Root Actions`` дает возможность создания новых элементов, 
``Go to Root`` - открывает уже созданные.

Корнем навигационного дерева являются ``страна``/ ``континент`` (``country``/
``continent``). Одинарный щелчок раскрывает иерархию по-убывающей. 
Более высокие по иерархии элементы называтся **parents**, более низкие - 
**children**.

.. attention:: **Чем отличаются children от special children**

    ``Children`` - объекты, которые моделируются точкой (город, подстанция, узел
    связи, шкаф, оборудование т.д.)

    ``Special children`` - линейные объекты, которые имеют начало и конец 
    (кабель).


На рисунках ниже изображен внешний вид навигационного дерева. В старой версии 
kuwaiba структура иерархии раскрывалась ступенчато:

.. image:: /res/start/what_kuwaiba_is/navigation_tree_old.PNG

Новая версия выглядит иначе 

